% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_dates.R
\name{mutate_dates}
\alias{mutate_dates}
\title{Mutate_date}
\usage{
mutate_dates(data, date_index)
}
\arguments{
\item{data}{a tibble or data.frame}

\item{date_index}{the date variable. This should be in an lubridate::as_date() format. ( "YYYY-MM_DD")}
}
\value{
a tibble with the follwing variabels as factors: date, day, epiweek (CDC format), month, year
}
\description{
The function gives mutates individual date related variables that are compatible withother function in this package
This will allow you to left_join datasets with date_templates for graphic with zero reporting.
If converting dates from excel, use openxlsx::convertToDateTime(data$ExcelNumber, origin = "1900-01-01")
}
\examples{
mutate_dates(data, date_index = "notification_date")
# to see whether it is creating dates propoperly

dates<- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")

tibble(
 date = dates)\%>\%
 mutate_dates(., "date")\%>\%
 group_by(month) \%>\%
 summarise(day_in_month = n())

 # or you could see the first and last day of the epiweek, which, according to CDC is, Sunday

tibble(
 date = dates)\%>\%
 mutate_dates(., "date")\%>\%
 group_by(epiweek) \%>\%
 filter( day == min(day ) | day == max(day))


}
